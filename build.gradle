plugins {
    id 'org.springframework.boot' version '2.1.7.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'com.bmuschko.docker-spring-boot-application' version '4.10.0'
}


group = 'ru.scoltech'
version = '1.0'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.liquibase:liquibase-core'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.6'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testCompile group: 'org.testcontainers', name: 'postgresql', version: '1.12.1'
    compile group: 'org.testcontainers', name: 'testcontainers', version: '1.12.1'
    testCompile group: 'org.testcontainers', name: 'selenium', version: '1.12.1'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.3.4'
}

String getConfigurationProperty(String envVar, String sysProp) {
    System.getenv(envVar) ?: project.findProperty(sysProp)
}

docker {
    springBootApplication {
        baseImage = 'openjdk:8-alpine'
        ports = [9090, 8080, 8081, 8082]
        maintainer = 'lyrchikov.alex@gmail.com'
        tag = 'spider16121993/measurement-service:1.0'
        jvmArgs = ['-Xmx2048m']
    }
}

task runApplication() {
    doLast {
        exec {
            executable "./appRun.sh"
        }
    }
}

task stopApplication() {
    doLast {
        exec {
            executable "./appStop.sh"
        }
    }
}